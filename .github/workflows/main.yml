name: Tauri Cross-Platform Build

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
        include:
          - os: macos-latest
            rust-target: x86_64-apple-darwin
          - os: ubuntu-22.04
            rust-target: x86_64-unknown-linux-gnu
          - os: windows-latest
            rust-target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.rust-target }}

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            build-essential \
            libgtk-3-dev \
            libayatana-appindicator3-dev

      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          choco install -y nodejs-lts --version=18.17.1
          choco install -y python --version=3.10.11
          choco install -y vcredist2015

      - name: Prepare macOS environment
        if: matrix.os == 'macos-latest'
        run: |
          # Clean up Homebrew state
          brew untap homebrew/core || true
          brew untap homebrew/cask || true
          brew update-reset || true
          brew update
          brew upgrade

      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          # Install core dependencies (no webkit required on macOS)
          brew install cmake pkg-config
          brew install gtk+3 libsoup
          
          # Install system tray support
          brew install libayatana-appindicator || \
            brew install ayatana-indicator-ayatana || \
            echo "System tray support might be limited"
          
          # Verify installations
          pkg-config --modversion gtk+-3.0 || echo "GTK not found"
          pkg-config --modversion libsoup-3.0 || echo "libsoup not found"

      - name: Install npm dependencies
        run: npm install

      - name: Build Tauri app
        run: npm run tauri build

      - name: Find built artifacts
        run: |
          echo "Build outputs:"
          ls -la src-tauri/target/release/
          ls -la src-tauri/target/release/bundle/ || true
          ls -la src-tauri/target/release/bundle/msi/ || true
          ls -la src-tauri/target/release/bundle/dmg/ || true
          ls -la src-tauri/target/release/bundle/osx/ || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-${{ matrix.os }}-build
          path: |
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.AppImage
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/osx/*.pkg

      - name: Create GitHub Release
        if: success() && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: |
            ### Release ${{ github.ref_name }}
            - Built for Windows, macOS, and Linux
            - See commit history for changes
          files: |
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.AppImage
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/osx/*.pkg
          draft: false
          prerelease: false
