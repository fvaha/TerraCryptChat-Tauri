name: Tauri Cross-Platform Build 67

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            build-essential \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            pkg-config \
            curl \
            libssl-dev \
            cmake

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: linux-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: npm install

      - run: npm run tauri build

      - run: |
          echo "Build artifacts:"
          ls -la src-tauri/target/release/
          ls -la src-tauri/target/release/bundle/ || true
          ls -la src-tauri/target/release/bundle/**/*.deb || true
          ls -la src-tauri/target/release/bundle/**/*.AppImage || true

      - uses: actions/upload-artifact@v4
        with:
          name: tauri-linux-build
          path: src-tauri/target/release/bundle/**/*.deb
          
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Windows dependencies
        run: |
          choco install -y nodejs-lts --version=18.17.1
          choco install -y python --version=3.10.11
          choco install -y vcredist2015

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - uses: actions/cache@v3
        with:
          path: |
            C:\Users\runneradmin\.cargo\registry
            C:\Users\runneradmin\.cargo\git
            src-tauri\target
          key: windows-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: npm install

      - run: npm run tauri build

      - run: dir src-tauri\target\release\bundle\msi

      - uses: actions/upload-artifact@v4
        with:
          name: tauri-windows-build
          path: src-tauri/target/release/bundle/msi/*.msi

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup macOS environment
        run: |
          brew update || true
          brew upgrade || true
          brew install cmake pkg-config gtk+3 libsoup

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-apple-darwin

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: macos-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: npm install

      - run: npm run tauri build

      - run: ls -la src-tauri/target/release/bundle/dmg
      - run: ls -la src-tauri/target/release/bundle/osx

      - uses: actions/upload-artifact@v4
        with:
          name: tauri-macos-build
          path: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/osx/*.pkg

  create-release:
    needs: [build-linux, build-windows, build-macos]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: tauri-linux-build
          path: ./artifacts/linux
      - uses: actions/download-artifact@v3
        with:
          name: tauri-windows-build
          path: ./artifacts/windows
      - uses: actions/download-artifact@v3
        with:
          name: tauri-macos-build
          path: ./artifacts/macos

      - uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: |
            ### Release ${{ github.ref_name }}
            - Built for Windows, macOS, and Linux
            - See commit history for changes
          files: |
            ./artifacts/linux/**/*.deb
            ./artifacts/linux/**/*.AppImage
            ./artifacts/windows/*.msi
            ./artifacts/macos/*.dmg
            ./artifacts/macos/*.pkg
          draft: false
          prerelease: false
