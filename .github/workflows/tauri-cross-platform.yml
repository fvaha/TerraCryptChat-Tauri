name: Build Tauri App

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install GLib and dependencies (Complete Solution)
        run: |
          # Update and clean first
          sudo apt-get update -y
          sudo apt-get autoremove -y
          
          # Install complete GLib/GTK development stack
          sudo apt-get install -y \
            libglib2.0-dev \
            libglib2.0-dev-bin \
            libgirepository1.0-dev \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            pkg-config \
            build-essential

          # Find exact location of glib-2.0.pc
          GLIB_PC_PATH=$(find /usr -name "glib-2.0.pc" 2>/dev/null | head -1)
          if [ -z "$GLIB_PC_PATH" ]; then
            echo "::error::glib-2.0.pc not found after installation!"
            exit 1
          fi

          # Set environment variables
          echo "PKG_CONFIG_PATH=$(dirname $GLIB_PC_PATH):/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig:/usr/local/lib/pkgconfig" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/usr/local/lib" >> $GITHUB_ENV

      - name: Verify GLib installation
        run: |
          echo "=== GLib Verification ==="
          echo "GLib version: $(pkg-config --modversion glib-2.0)"
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          echo "glib-2.0.pc location: $(find /usr -name "glib-2.0.pc" 2>/dev/null | head -1)"
          pkg-config --exists glib-2.0 || (echo "::error::GLib not found!" && exit 1)
          pkg-config --atleast-version=2.70 glib-2.0 || (echo "::error::GLib version too old!" && exit 1)

      - name: Install npm dependencies
        run: |
          npm install
          npm run build

      - name: Build Tauri app
        run: |
          # Explicitly set paths for the build
          export PKG_CONFIG_PATH=$PKG_CONFIG_PATH
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH
          npm run tauri build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build
          path: src-tauri/target/release/
