name: Build Tauri App

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-22.04  # Using older LTS for stability

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu

      - name: Nuclear GLib/GObject Installation
        run: |
          # Complete system purge
          sudo apt-get remove -y libglib2.0-* libgobject-* libgio-* || true
          sudo apt-get autoremove -y
          sudo find /usr -name "*glib*" -delete 2>/dev/null || true
          sudo find /usr -name "*gobject*" -delete 2>/dev/null || true
          sudo find /usr -name "*gio*" -delete 2>/dev/null || true

          # Install specific known-working versions
          sudo apt-get update -y
          sudo apt-get install -y \
            libglib2.0-dev=2.72.4-0ubuntu2 \
            libgirepository1.0-dev=1.72.0-1 \
            libgobject-2.0-dev=2.72.4-0ubuntu2 \
            libgio-2.0-dev=2.72.4-0ubuntu2 \
            libgtk-3-dev=3.24.33-1ubuntu2 \
            libwebkit2gtk-4.0-dev=2.38.5-0ubuntu0.22.04.1 \
            pkg-config=0.29.2-1ubuntu3 \
            build-essential=12.9ubuntu3

          # Force-create symlinks in all possible locations
          sudo mkdir -p /usr/share/pkgconfig /usr/local/lib/pkgconfig
          sudo ln -sf /usr/lib/x86_64-linux-gnu/pkgconfig/glib-2.0.pc /usr/share/pkgconfig/
          sudo ln -sf /usr/lib/x86_64-linux-gnu/pkgconfig/gobject-2.0.pc /usr/share/pkgconfig/
          sudo ln -sf /usr/lib/x86_64-linux-gnu/pkgconfig/gio-2.0.pc /usr/share/pkgconfig/
          sudo ldconfig

          # Set exhaustive environment paths
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig:/usr/local/lib/pkgconfig" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/usr/local/lib" >> $GITHUB_ENV

      - name: Build GLib from Source (Fallback)
        if: ${{ failure() }}
        run: |
          # Install build dependencies
          sudo apt-get install -y meson ninja-build gettext libffi-dev libmount-dev libselinux1-dev
          
          # Build and install GLib
          wget https://download.gnome.org/sources/glib/2.72/glib-2.72.4.tar.xz
          tar -xf glib-2.72.4.tar.xz
          cd glib-2.72.4
          meson setup _build -Dprefix=/usr/local -Dselinux=disabled
          ninja -C _build
          sudo ninja -C _build install
          sudo ldconfig
          echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

      - name: Verify Installation
        run: |
          echo "=== System Verification ==="
          echo "GLib version: $(pkg-config --modversion glib-2.0 || echo 'NOT FOUND')"
          echo "GObject version: $(pkg-config --modversion gobject-2.0 || echo 'NOT FOUND')"
          echo "GIO version: $(pkg-config --modversion gio-2.0 || echo 'NOT FOUND')"
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          echo "File locations:"
          sudo find /usr -name "glib-2.0.pc" 2>/dev/null || echo "Not found"
          sudo find /usr -name "gobject-2.0.pc" 2>/dev/null || echo "Not found"
          sudo find /usr -name "gio-2.0.pc" 2>/dev/null || echo "Not found"

          if ! pkg-config --exists glib-2.0 || ! pkg-config --exists gobject-2.0 || ! pkg-config --exists gio-2.0; then
            echo "::error::Critical failure - packages not found after installation"
            exit 1
          fi

      - name: Install npm dependencies
        run: npm install

      - name: Build Tauri App
        run: |
          # Hardcoded paths as final fallback
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig:/usr/local/lib/pkgconfig
          export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/usr/local/lib
          npm run tauri build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build
          path: src-tauri/target/release/
