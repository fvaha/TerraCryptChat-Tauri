name: Build and Release Tauri App

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-24.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu

      - name: Install Linux dependencies (Ubuntu 24.04)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-4-dev \
            libglib2.0-dev \
            libgirepository1.0-dev \
            libssl-dev \
            pkg-config \
            build-essential \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libcairo2-dev \
            libpango1.0-dev \
            libatk1.0-dev \
            libgdk-pixbuf-2.0-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev

          # Find exact location of glib-2.0.pc
          GLIB_PC_PATH=$(find /usr -name "glib-2.0.pc" | head -1)
          echo "Found glib-2.0.pc at: $GLIB_PC_PATH"
          echo "PKG_CONFIG_PATH=$(dirname $GLIB_PC_PATH):/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV

      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install pkg-config gtk4 webkitgtk librsvg glib gtk+3
          brew link --overwrite gtk4 glib

      - name: Install Windows dependencies
        if: runner.os == 'Windows'
        run: |
          choco install -y visualstudio2022-workload-vctools
          refreshenv

      - name: Verify environment (Linux)
        if: runner.os == 'Linux'
        run: |
          echo "=== Environment Verification ==="
          echo "GLib version: $(pkg-config --modversion glib-2.0)"
          echo "GTK version: $(pkg-config --modversion gtk4)"
          echo "WebKit version: $(pkg-config --modversion webkit2gtk-4.1)"
          pkg-config --atleast-version=2.70 glib-2.0 || exit 1
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH"

      - name: Install npm dependencies
        run: |
          npm install
          npm run build

      - name: Build Tauri app
        run: npm run tauri build
        env:
          PKG_CONFIG_PATH: ${{ env.PKG_CONFIG_PATH }}
          LD_LIBRARY_PATH: ${{ env.LD_LIBRARY_PATH }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-${{ runner.os }}
          path: |
            src-tauri/target/release/*.deb
            src-tauri/target/release/*.app.tar.gz
            src-tauri/target/release/*.msi
            src-tauri/target/release/*.appimage
            src-tauri/target/release/*.exe

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        if: success() && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "Automated release for TerraCryptChat"
          files: |
            src-tauri/target/release/*.deb
            src-tauri/target/release/*.app.tar.gz
            src-tauri/target/release/*.msi
            src-tauri/target/release/*.appimage
            src-tauri/target/release/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
